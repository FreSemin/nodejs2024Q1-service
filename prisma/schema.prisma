// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum FavoriteType {
  ARTIST
  ALBUM
  TRACK
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  login     String
  password  String
  version   Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Artist {
  id     String  @id @default(uuid()) @db.Uuid
  name   String
  grammy Boolean @default(false)
  Album  Album[]
  Track  Track[]

  @@map("artists")
}

model Album {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  year     Int
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @map("artist_id") @db.Uuid
  Track    Track[]

  @@map("albums")
}

model Track {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  duration Int     @default(0)
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @map("artist_id") @db.Uuid
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String? @map("album_id") @db.Uuid

  @@map("tracks")
}

model Favorites {
  id       String       @id @default(uuid()) @db.Uuid
  entityId String       @map("entity_id") @db.Uuid
  type     FavoriteType

  @@map("favorites")
}
